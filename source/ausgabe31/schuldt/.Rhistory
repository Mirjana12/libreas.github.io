aes(x=long, y=lat, map_id=id, fill = log(n))) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n))) +
theme_map()
inst_count
my_map <- fortify(wrld_simpl,region = "ISO2") %>%
filter(!region == AQ)
map_df <- left_join(my_map, inst_count, by = c("id" = "country"))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n))) +
theme_map()
gg
my_map <- fortify(wrld_simpl,region = "ISO2") %>%
filter(!region == "AQ")
map_df <- left_join(my_map, inst_count, by = c("id" = "country"))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n))) +
theme_map()
gg
head(map_df)
unique(map_df$id)
my_map <- fortify(wrld_simpl,region = "ISO2") %>%
filter(!id == "AQ")
map_df <- left_join(my_map, inst_count, by = c("id" = "country"))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n))) +
theme_map()
gg
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n), color="#191919")) +
theme_map()
gg
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919") +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.5) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = (n)), color="#191919", size = 0.05) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log10(n)), color="#191919", size = 0.05) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map()
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "New Legend Title")
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# IRs")
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# IRs")
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)") +
ggtitle("Distribution of Institutional Repositories")
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)") +
ggtitle("Distribution of Institutional Repositories (Source: ROAR, April 2017)")
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)") +
ggtitle("Distribution of Institutional Repositories (Source: ROAR, April 2017)")
ggsave(gg, "~/Downloads/raor_map.pdf",  width = 12, height = 6)
ggsave(gg, path = "~/Downloads/raor_map.png",  width = 12, height = 6)
ggsave(path = "~/Downloads/raor_map.png",  width = 12, height = 6)
ggsave(filename = "~/Downloads/raor_map.png",  width = 12, height = 6)
inst_count
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
gg
ggsave(filename = "~/Downloads/raor_map.png",  width = 12, height = 6)
map_df <- left_join(my_map, inst_count, by = c("id" = "country")) %>%
mutate(n = ifelse(n, NA, 0, n))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
map_df <- left_join(my_map, inst_count, by = c("id" = "country")) %>%
mutate(n = ifelse(is.na(n), NA, 0, n))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
map_df <- left_join(my_map, inst_count, by = c("id" = "country")) %>%
mutate(n = ifelse(is.na(n), 0, n))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
ggsave(filename = "~/Downloads/raor_map.png",  width = 12, height = 6)
n
map_df$n
head(map_df)
map_df <- left_join(my_map, inst_count, by = c("id" = "country")) %>%
mutate(n = ifelse(is.na(n), 0, n))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = log(n)), color="#191919", size = 0.05) +
theme_map() +
scale_fill_continuous(name = "# of IRs\n (log scale)")
gg
log(n)
log(map_df$n)
map_df <- left_join(my_map, inst_count, by = c("id" = "country")) %>%
mutate(n = ifelse(is.na(n), 0, n))
library(ggplot2)  # FYI you need v2.0
library(dplyr)    # yes, i could have not done this and just used 'subset' instead of 'filter'
library(ggalt)    # devtools::install_github("hrbrmstr/ggalt")
library(ggthemes) # theme_map and tableau colors
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = n), color="#191919", size = 0.05) +
theme_map() +
scale_fill_gradient(name = "# of IRs\n (log scale)", trans = "log")
gg
ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = n), color="#191919", size = 0.05) +
theme_map() +
scale_fill_gradient(name = "# of IRs\n (log scale)", trans = "log10")
?scale_fill_gradient
gg <- ggplot() +
geom_map(data=map_df, map=map_df,
aes(x=long, y=lat, map_id=id, fill = n), color="#191919", size = 0.05) +
theme_map() +
scale_fill_gradient(name = "# of IRs\n(log scale)", trans = "log10")
gg
ggsave(filename = "~/Downloads/raor_map.png",  width = 12, height = 6)
getOption("gbif_email")
?httr::POST
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/search?", body = list(query = malaria))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/search?", body = list(query = "malaria"))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/search", body = list(query = "malaria"))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost", body = list(query = "malaria"))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost", body = "malaria")
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost", body = "malaria", encode = "json")
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = "malaria", encode = "json")
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list("malaria"), encode = "json")
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list("malaria"))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(query = "malaria"))
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(query = "malaria"), verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(query = "malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(query = "title"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(title = "malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(title = "malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list("malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/searchPost/", body = list(q = "malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/", body = list(searchPost = "malaria"), httr::verbose())
httr::POST("http://www.ebi.ac.uk/europepmc/webservices/rest/", body = list(query = "malaria"), httr::verbose())
library(dplyr)
u <- "https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&safe=off&start=20"
req <- httr::GET(u) %>%
content()
req <- httr::GET(u) %>%
httr::content()
req
xml2::xml_find_all(req, "//h3//a")
xml2::xml_find_all(req, "//h3[@class='r']//a")
out <- xml2::xml_find_all(req, "//a")
out
out <- xml2::xml_find_all(req, "//div[@class='r']")
out
xml2::xml_find_all(req, "//h3[@class='r']")
xml2::xml_find_all(req, "//h3")
xml2::xml_find_all(req, "//h2")
xml2::xml_find_all(req, "//a")
xml2::xml_find_all(req, "//a[@href='href']")
xml2::xml_find_all(req, "//a[@href]")
xml2::xml_find_all(req, "//a[@href]") %>%
xml2::xml_text()
xml2::xml_find_all(req, "//a[@href]") %>%
xml2::xml_attr()
xml2::xml_find_all(req, "//a[@href]") %>%
xml2::xml_attrs()
xml2::xml_find_all(req, "//div[@class='mv'])"
)
xml2::xml_find_all(req, "//div[@class='mv']")
xml2::xml_find_all(req, "//*[@class='g']")
xml2::xml_find_all(req, "//div[contains(concat(' ', @class, ' '),' rc ')]")
req
xml2::xml_find_all(req, "//h3[@class='r']/a/@href")
xml2::xml_find_all(req, "*//h3[@class='r']")
xml2::xml_find_all(req, "/h3[@class='r']")
xml2::xml_find_all(req, "h3[@class='r']")
xml2::xml_find_all(req, "*//h3[@class='r']")
xml2::xml_find_all(req, "*//h3[@class='r']//*")
xml2::xml_find_all(req, "//*[@id="rso"]/div/div/div[3]/div/div/h3/a")
xml2::xml_find_all(req, '//*[@id="rso"]/div/div/div[3]/div/div/h3/a')
xml2::xml_find_all(req, '//*div/h3/a')
xml2::xml_find_all(req, '//div/h3/a')
xml2::xml_find_all(req, '*//div/h3/a')
xml2::xml_find_all(req, 'h3/a')
xml2::xml_find_all(req, 'h3')
xml2::xml_find_all(req, './/h3')
xml2::xml_find_all(req, '*/h3')
xml2::xml_find_all(req, '//*[@id="rso"]/div/div/div[3]/div/div')
xml2::xml_find_all(req, '//*[@id="rso"]/div/div/')
xml2::xml_find_all(req, '//*[@id="rso"]/div/div')
xml2::xml_find_all(req, '//*[@id="rso"]')
xml2::xml_find_all(req, '//[@id="rso"]')
xml2::xml_find_all(req, '//*[@id="rso"]/div')
xml2::xml_find_all(req, '//*[@id="rso"]/')
xml2::xml_find_all(req, '//*[@id="rso"]')
xml2::xml_find_all(req, '//*[@id="rso"]')
xml2::xml_find_all(req, '*//*[@id="rso"]')
xml2::xml_find_all(req, '//h3[@class="r"]')
xml2::xml_find_all(req, '*//h3[@class="r"]')
xml2::xml_attrs(req)
xml2::xml_attrs(req, '//h3[@class="r"]')
xml2::xml_find_all(req, '/h3[@class='r']//a/@href | //h3[@class='r']')
xml2::xml_find_all(req, "/h3[@class='r']//a/@href | //h3[@class='r']")
xml2::xml_find_all(req, ""//h3[@class='r']//a")
xml2::xml_find_all(req, "//h3[@class='r']//a")
xml2::html_structure(req)
library(rvest)
ht <- read_html('https://www.google.co.in/search?q=guitar+repair+workshop')
links <- ht %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
links
gsub('/url\\?q=','',sapply(strsplit(links[as.vector(grep('url',links))],split='&'),'[',1))
req %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
ht <- read_html(req)
u <- "https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&safe=off&start=20"
req <- httr::GET(u) %>%
httr::content("text/html")
req <- httr::GET(u) %>%
httr::content("text")
req
ht <- read_html(req)
ht
req %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
ht %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
ht <- read_html('https://www.google.co.in/search?q=guitar+repair+workshop')
ht %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
ht %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
ht %>% html_nodes(xpath='//h3/a') %>% html_text()
library(rvest)
u <- c("https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=0&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=101&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=201&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=301&num=100")
ht <- read_html(u[1])
ht
title <- ht %>%
html_nodes(xpath='//h3/a')
link <- html_nodes(xpath='//h3/a') %>%
html_attr('href')
link <- ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
cbind(title, link)
ht
ht %>%
html_nodes(xpath='//h3/a') %>% html_text()
ht %>% html_nodes("h3") %>%
html_text()
ht <- read_html('https://www.google.co.in/search?q=guitar+repair+workshop')
ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
u[1]
read_html("https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=0&num=100")
ht <- read_html("https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=0&num=100")
ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
req <- httr::GET(u[1]) %>%
httr::content("text")
req
ht <- read_html(req)
ht %>% html_nodes(xpath='//h3/a') %>% html_attr('href')
u <- "https://www.googleapis.com/customsearch/v1?q=%22editorial%20board%22&key=AIzaSyCk8ZUpB8dXScH1Hz-JP8439SgmE7qyVm0&cx=000459371984010765919:skayzpcm1au"
req <- httr::GET(u)
req <- httr::GET(u) %>%
content()
req <- httr::GET(u) %>%
httr::content()
req
sapply(req, "[[", "title")
sapply(req, "[", "title")
sapply(req$items, "[", "title")
sapply(req$items, "[", "link")
u <- c("https://www.google.de/#q=%22editorial+board%22+site:uni-goettingen.de/&start=0&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=101&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=201&num=100",
"https://www.google.de/#q=%22editorial+board%22+site:http://www.uni-goettingen.de/&start=301&num=100")
ht <- read_html(u[1])
title <- ht %>%
html_nodes(xpath='//h3/a') %>%
link <- ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
library(dplyr)
library(rvest)
ht <- read_html(u[1])
title <- ht %>%
html_nodes(xpath='//h3/a') %>%
link <- ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
title <- ht %>%
html_nodes(xpath='//h3/a')
title
ht %>% html_nodes(xpath='//h3/a') %>%
html_attr('href')
tt <- rio::import("~/Downloads/tmp_editor.xlsx")
tt
head(tt)
filter(tt, grepl("uni-goettingen", 2))
colnames(tt)
?rio::import
tt <- rio::import("~/Downloads/tmp_editor.xlsx")
head(tt)
filter(tt, grepl("uni-goettingen", v2))
filter(tt, grepl("uni-goettingen", v2))
mx <- tt %>% filter(grepl("uni-goettingen", v2)) %>% filter(v2, !grepl("https://translate.google.de/", v2))
mx <- tt %>% filter(grepl("uni-goettingen", v2)) %>% filter(v2, grepl(!"https://translate.google.de/", v2))
mx <- tt %>% filter(grepl("uni-goettingen", v2)) %>% filter(v2, !grepl("https://translate.google.de/", v2))
mx <- tt %>% filter(grepl("uni-goettingen", v2)) %>% filter(!grepl("https://translate.google.de/", v2))
mx
tt %>%
filter(grepl("uni-goettingen", v2)) %>%
filter(!grepl("https://translate.google.de/", v2)) %>%
filter(!grepl("https://www.univerlag.uni-goettingen.de/", v2)) %>%
filter(!grepl("https://goedoc.uni-goettingen.de/", v2))
mx <- tt %>%
filter(grepl("uni-goettingen", v2)) %>%
filter(!grepl("https://translate.google.de/", v2)) %>%
filter(!grepl("https://www.univerlag.uni-goettingen.de/", v2)) %>%
filter(!grepl("https://goedoc.uni-goettingen.de/", v2))
head(mx)
rio::export(mx, "~/Downloads/editorial_links.xlsx")
mx <- tt %>%
filter(grepl("uni-goettingen", v2)) %>%
filter(!grepl("https://translate.google.de/", v2)) %>%
filter(!grepl("univerlag.uni-goettingen.de/", v2)) %>%
filter(!grepl("goedoc.uni-goettingen.de/", v2))
rio::export(mx, "~/Downloads/editorial_links.xlsx")
library(solrium)
install.packages("solrium")
solrium::solr_connect("localhost:8983/solr/grid/select",
errors = "complete", verbose =FALSE)
solrium::solr_search(q = '"University of Exeter"')
solrium::solr_search(q = '"University of Gottingen"')
solrium::solr_search(q = '"University of Göttingen"')
solrium::solr_search(q = '"University of Gottingen"')
solrium::solr_search(q = '"University of Göttingen"')
solrium::solr_search(q = 'University of Göttingen')
solrium::solr_search(q = 'University of Gottingen')
solrium::solr_search(q = 'University+of+Gottingen')
solrium::solr_search(q = '"University+of+Gottingen"')
solrium::solr_search(q = 'name:University of Gottingen')
solrium::solr_search(q = 'name:University of Göttingen')
solrium::solr_search(q = 'name:"University of Göttingen"')
solrium::solr_search(q = 'name:"University of Gottingen"')
solrium::solr_search(q = 'name:University of Gottingen')
solrium::solr_search(q = 'name:University of Göttingen')
solrium::solr_search(q = 'name:University of Gottingen')
library(dplyr)
aa <- c("Göttingen", "Exeter")
bb <- c("Exeter", "Gottingen")
install.packages("fuzzyjoin")
aa %>% fuzzyjoin::fuzzy_inner_join(bb)
aa
tbl_df(aa)
aa <- tbl_df(aa)
bb <- tbl_df(bb)
aa %>% fuzzyjoin::fuzzy_inner_join(bb)
?fuzzy_inner_join
aa %>% fuzzyjoin::stringdist_inner_join(bb)
aa %>% fuzzyjoin::stringdist_inner_join(bb, max_dist = 2)
solrium::solr_search(q = '"Univ Cologne"')
solrium::solr_search(q = 'Univ Cologne')
aa <- c("Göttingen", "Exeter", "University of Cologne")
bb <- c("Exeter", "Gottingen", "Univ Cologne")
aa %>% fuzzyjoin::stringdist_inner_join(bb, max_dist = 2)
aa <- tbl_df(c("Göttingen", "Exeter", "University of Cologne"))
bb <- tbl_df(c("Exeter", "Gottingen", "Univ Cologne"))
aa %>% fuzzyjoin::stringdist_inner_join(bb, max_dist = 2)
aa %>% fuzzyjoin::stringdist_inner_join(bb)
aa %>% fuzzyjoin::stringdist_anti_join(bb)
bb %>% fuzzyjoin::stringdist_inner_join(aa)
aa <- tbl_df(c("University of Göttingen", "Exeter", "University of Cologne"))
bb <- tbl_df(c("Exeter", "Univ Gottingen", "Univ Cologne"))
bb %>% fuzzyjoin::stringdist_inner_join(aa)
solrium::solr_search(q = '"Univ Gottingen"')
solrium::solr_search(q = 'Univ*Gottingen*')
solrium::solr_search(q = 'Univ Gottingen')
solrium::solr_search(q = 'Univ$ Gottingen$')
solrium::solr_search(q = 'Univ Gottingen*')
solrium::solr_search(q = 'Univ Gottingen')
bb %>% fuzzyjoin::stringdist_inner_join(aa, max_dist = 10)
bb %>% fuzzyjoin::stringdist_inner_join(aa, max_dist = 5)
bb %>% fuzzyjoin::stringdist_inner_join(aa, max_dist = 8)
bb %>% fuzzyjoin::stringdist_inner_join(aa, max_dist = 9)
bb %>% fuzzyjoin::stringdist_inner_join(aa, max_dist = 10)
u <- "https://www.publikationsfreiheit.de/der-appell/"
req <- httr::GET(u) %>%
httr::content()
library(dpylr)
library(dplyr)
u <- "https://www.publikationsfreiheit.de/der-appell/"
req <- httr::GET(u) %>%
httr::content()
texts <- xml2::xml_find_all(req, '//*[@id="packery-container"]//section//article') %>%
xml2::xml_text()
texts <- gsub("\n                                Ich unterstütze die Publikationsfreiheit, weil ...\n", "", texts)
comments <- gsub("\\n.*$", "", texts)
head(comments)
comments <- gsub("                                ", "", comments)
head(comments)
setwd("Documents/libreas/source/ausgabe31/schuldt/")
tt <- rio::import("tabelle_1.xlsx")
tt
pander::pandoc.table(tt)
readr::write_csv(tt, "table_1.csv")
tt <- rio::import("tabelle_1.xlsx")
pander::pandoc.table(tt)
tt <- rio::import("tabelle_1.xlsx")
pander::pandoc.table(tt)
readr::read_delim("tabelle_2.csv", delim = ";")
tt <- readr::read_delim("tabelle_2.csv", delim = ";")
pander::pandoc.table(tt)
tt <- readr::read_delim("tabelle_2.csv", delim = ";")
pander::pandoc.table(tt)
dim(tt)
as.matrix(tt)
pander::pandoc.table(as.matrix(tt))
tt <- readr::read_delim("tabelle_3.csv", delim = ";")
pander::pandoc.table(as.matrix(tt))
?pandoc.table
pander::pandoc.table(as.matrix(tt), justify = "ll")
pander::pandoc.table(as.matrix(tt), justify = "lr")
tt <- readr::read_delim("tabelle_2.csv", delim = ";")
dim(tt)
pander::pandoc.table(as.matrix(tt), justify = "lrrrrrrrr")
tt <- readr::read_delim("tabelle_1.csv", delim = ";")
tt <- readr::read_delim("tabelle_1.csv", delim = ,)
tt <- readr::read_delim("tabelle_1.csv", delim = ",")
tt <- rio::import("tabelle_1.xlsx")
tt
tt <- readr::read_delim("tabelle_1.csv", delim = ",")
tt <- readr::read_delim("tabelle_1.csv", delim = ";")
pander::pandoc.table(as.matrix(tt), justify = "lrrrrrrrr")
tt <- readr::read_delim("tabelle_4.csv", delim = ";")
pander::pandoc.table(as.matrix(tt), justify = "lr")
